<UserControl x:Class="TabletopSystems.Views.SystemSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TabletopSystems.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="Transparent"
             BorderThickness="0">
    <UserControl.Resources>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#777777"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#AAAAAA"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="79"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" HorizontalAlignment="Stretch">
            <TextBlock HorizontalAlignment="Center" FontSize="40" Foreground="GhostWhite" Opacity="0.8" Background="Transparent">Systems</TextBlock>
            <ListView Name="SystemsList"
                      ItemsSource="{Binding Systems, Mode=OneWay}"
                      DisplayMemberPath="SystemName"
                      Background="Transparent"
                      Opacity="0.8"
                      Margin="5"
                      BorderThickness="0"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.ScrollUnit="Pixel"
                      HorizontalContentAlignment="Center"
                      FontSize="30"
                      Foreground="GhostWhite"
                      MouseDoubleClick="ListView_MouseDoubleClick"
                      SelectionChanged="SystemsList_SelectionChanged" 
                      >
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel VerticalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

            </ListView>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="2">
                <Button Opacity="0.8" Foreground="GhostWhite" FontSize="15" Height="25" Margin="2 1 2 1" Command="{Binding AddSystemCommand}">
                    <Button.Background>
                        <SolidColorBrush Color="Black" Opacity="0.6"/>
                    </Button.Background>
                    Add
                </Button>
                <Button Opacity="0.8" Foreground="GhostWhite" FontSize="15" Height="25" Margin="2 0 2 1">
                    <Button.Background>
                        <SolidColorBrush Color="Black" Opacity="0.6"/>
                    </Button.Background>
                    Edit
                </Button>
                <Button Command="{Binding DeleteSystemCommand}" Opacity="0.8" Foreground="GhostWhite" FontSize="15" Height="25" Margin="2 0 2 1">
                    <Button.Background>
                        <SolidColorBrush Color="Black" Opacity="0.6"/>
                    </Button.Background>
                    Delete
                </Button>
            </StackPanel>
            <Button Command="{Binding ReloadCommand}" Padding="5 0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="0.8" Foreground="GhostWhite" FontSize="15" Height="25" Margin="2 1 2 1">
                <Button.Background>
                    <SolidColorBrush Color="Black" Opacity="0.6"/>
                </Button.Background>
                Reload
            </Button>
        </Grid>
    </Grid>
</UserControl>
